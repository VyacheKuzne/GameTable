generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Armor {
  id      Int    @id @default(autoincrement())
  name    String
  defense Int
  weight  Int
  mob     mob[]
  createdAt  DateTime   @default(now())

}

model Weapon {
  id     Int    @id @default(autoincrement())
  name   String
  damage Int
  weight Int
  mob    mob[]
  createdAt  DateTime   @default(now())

}

model mob {
  id        Int        @id @default(autoincrement())
  name      String
  health    Int
  attack    Int
  defense   Int
  speed     Int
  weaponId  Int?
  armorId   Int?
  armor     Armor?     @relation(fields: [armorId], references: [id], map: "Mob_armorId_fkey")
  weapon    Weapon?    @relation(fields: [weaponId], references: [id], map: "Mob_weaponId_fkey")
  turnorder TurnOrder?
  turnhistory turnhistory[]
  manevr Int
  createdAt  DateTime   @default(now())



  @@index([armorId], map: "Mob_armorId_fkey")
  @@index([weaponId], map: "Mob_weaponId_fkey")
}

model TurnOrder {
  id        Int @id @default(autoincrement())
  turnIndex Int
  mob       mob @relation(fields: [mobId], references: [id], map: "TurnOrder_mobId_fkey")
  mobId     Int @unique(map: "TurnOrder_mobId_key")
  createdAt  DateTime   @default(now())
}

model turnhistory {
  id Int @id @default(autoincrement())
  x Int
  y Int
  GameHub GameHub? @relation(fields: [idSession], references: [token])
  idSession String?
  createdAt DateTime @default(now())
  Mob mob? @relation(fields: [idMob], references: [id])
  idMob Int?
  User User? @relation(fields: [idOwner], references: [id])
  idOwner Int
  tokenMob String @unique
  isOverMove Boolean?
}



model chatMessage{
  id   Int    @id @default(autoincrement())
  text String
  GameHub GameHub? @relation(fields: [idSession], references: [token])
  idSession String?
  createdAt DateTime
  
}

model Tariff {
  idTariff Int @id @default(autoincrement())
  name String
  status String @default("avtive")
  user User[]
  createdAt  DateTime   @default(now())

}
model User {
  id                Int         @id @default(autoincrement())
  name              String
  secondname        String
  email             String      @unique
  phone             String      @unique
  password          String
  nickname          String      @unique
  createdAt         DateTime    @default(now())
  updateAt          DateTime
  role              String      @default("user")
  status            String      @default("active")
  tarif             Tariff?     @relation(fields: [idTariff], references: [idTariff])
  idTariff          Int?
  createdSessionId  String?     @unique 
  turnhistory       turnhistory[]
  gameHub           GameHub?    @relation("GameHubPlayers", fields: [idSession], references: [token]) 
  idSession         String?

}

model GameHub {
  idSession   Int         @id @default(autoincrement())
  token       String      @unique
  status      String
  createdAt   DateTime    @default(now())
  updateAT    DateTime
  turnhistory turnhistory[]
  chatMessage chatMessage[]
  users       User[]      @relation("GameHubPlayers")
}

