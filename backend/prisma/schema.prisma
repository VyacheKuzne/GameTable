generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Armor {
  id      Int    @id @default(autoincrement())
  name    String
  defense Int
  mob     mob[]
  createdAt  DateTime   @default(now())
  user User? @relation(fields: [creatorId], references: [id])
  creatorId Int? 
}

model Weapon {
  id     Int    @id @default(autoincrement())
  name   String
  damage Int
  mob    mob[]
  createdAt  DateTime   @default(now())
  user User? @relation(fields: [creatorId], references: [id])
  creatorId Int? 
}

model leftTime {
  id        Int      @id @default(autoincrement())
  time      Int
  userId    Int?     @unique
  Tariff    Tariff?  @relation(fields: [tariffId], references: [idTariff])
  tariffId  Int?   
  user      User?    @relation("UserLeftTime", fields: [userId], references: [id]) // Связь с моделью User
}

model mob {
  id        Int        @id @default(autoincrement())
  name      String
  health    Int
  speed     Int
  weaponId  Int?
  armorId   Int?
  armor     Armor?     @relation(fields: [armorId], references: [id], map: "Mob_armorId_fkey")
  weapon    Weapon?    @relation(fields: [weaponId], references: [id], map: "Mob_weaponId_fkey")
  turnorder TurnOrder?
  mobsOnTable mobsOnTable[]
  titul titul? @relation(fields: [titulid], references: [id])
  titulid Int? 
  user User? @relation(fields: [creatorId], references: [id])
  creatorId Int? 
  manevr Int
  createdAt  DateTime   @default(now())
  skill skill[] 



  @@index([armorId], map: "Mob_armorId_fkey")
  @@index([weaponId], map: "Mob_weaponId_fkey")
}

model titul {
  id Int @id @default(autoincrement())
  name String 
  mob mob[]
}

model TurnOrder {
  id        Int @id @default(autoincrement())
  turnIndex Int
  mob       mob @relation(fields: [mobId], references: [id], map: "TurnOrder_mobId_fkey")
  mobId     Int @unique(map: "TurnOrder_mobId_key")
  createdAt  DateTime   @default(now())
}

model mobsOnTable {
  id Int @id @default(autoincrement())
  x Int
  y Int
  name      String
  healthMax    Int
  healthNow    Int 
  psih Int @default(100)
  GameHub GameHub? @relation(fields: [idSession], references: [token])
  idSession String?
  createdAt DateTime @default(now())
  Mob mob? @relation(fields: [idMob], references: [id])
  idMob Int?
  User User? @relation(fields: [idOwner], references: [id])
  idOwner Int
  tokenMob String @unique
  isOverMove Boolean?
  willToLive Int? @default(80)
  status String @default("alive")
}



model chatMessage{
  id   Int    @id @default(autoincrement())
  text String
  GameHub GameHub? @relation(fields: [idSession], references: [token])
  idSession String?
  createdAt DateTime
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  Int
}

model Tariff {
  idTariff Int @id @default(autoincrement())
  name String @unique
  status String @default("avtive")
  user User[]
  creator    User     @relation("CreaterUser", fields: [createrId], references: [id])
  createrId  Int
  availableMobs Int
  availableTime Int
  price Int
  createdAt  DateTime   @default(now())
  updateAt DateTime @updatedAt
  purchasedTariffs  purchasedTariffs[]
  leftTime leftTime[] 

}
model User {
  id                Int         @id @default(autoincrement())
  name              String
  secondname        String
  email             String      @unique
  phone             String      @unique
  password          String
  nickname          String      @unique
  createdAt         DateTime    @default(now())
  updateAt          DateTime    @updatedAt
  role              String      @default("user")
  status            String      @default("active")
  yandexId          String?     @unique
  tarif             Tariff?     @relation(fields: [idTariff], references: [idTariff])
  idTariff          Int?
  avatar            String?
  createdSessionId  String?     @unique 
  gameHub           GameHub?    @relation("GameHubPlayers", fields: [idSession], references: [token]) 
  idSession         String?
  createdTariffs    Tariff[]    @relation("CreaterUser") // Link to tariffs created by this user
  purchasedTariffs  purchasedTariffs[]
  mobsOnTable       mobsOnTable[]
  mob               mob[]
  chatMessage       chatMessage[]
  skill             skill[]
  weapon            Weapon[]
  armor             Armor[] 
  leftTime          leftTime?   @relation("UserLeftTime") // Указываем на связь, не используя `fields` и `references` здесь
}


model GameHub {
  idSession   Int         @id @default(autoincrement())
  token       String      @unique
  status      String
  createdAt   DateTime    @default(now())
  updateAT    DateTime @updatedAt
  mobsOnTable mobsOnTable[]
  chatMessage chatMessage[]
  users       User[]      @relation("GameHubPlayers")
}

model skill {
  idSkill Int @id @default(autoincrement())
  name String @unique
  timeout Int
  damageMin Int
  // issupport Boolean 
  damageMax Int
  range Int
  mob         mob?  @relation(fields: [mobId], references: [id])
  mobId       Int?
    user User? @relation(fields: [creatorId], references: [id])
  creatorId Int? 
}

model purchasedTariffs {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [userId], references: [id])
  userId         Int

  tariff         Tariff   @relation(fields: [tariffId], references: [idTariff])
  tariffId       Int

  createdAt      DateTime @default(now())
  priceAtPurchase Int
  

  @@unique([userId, tariffId, createdAt]) 
}

// model tarifAdvantages {
//   id Int @id @default(autoincrement())

// }